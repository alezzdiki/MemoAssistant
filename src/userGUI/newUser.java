/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userGUI;
import memoassistant.*;
import client_server.*;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import java.text.ParseException;
import javax.swing.JTextField;
/**
 *
 * @author Alessandro
 */
public class newUser extends javax.swing.JFrame {

    /**
     * Creates new form newUser (dalla schermata login)
     */
    public newUser() {
        initComponents();
    }
    
    /**
     * Viene utilizzato quando si accede alla schermata utente dal firstscreeen
     * @param user utente che ha effettuato il login
     */
    public newUser(User user) {
        initComponents();
        loadUser(user);
    }
    
    /**
     * carica l'user nella schermata per evntuali modifiche
     * @param user user che ha effettuato il login
     */
    private void loadUser(User user){
    
        try {
            NameTF.setText(user.getName());
            SurnameTF.setText(user.getSurname());
            jDateChooser1.setDate(user.getDate());
            PasswordTF.setText(user.getPassword());
            EmailTF.setText(user.getEmail());
            EmailTF.setEnabled(false);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Server out of services", ex.getMessage(), ERROR_MESSAGE);
        }
        
    }
    
    
    public void setNameButton(String name){
    
      CreateButton.setText(name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSfondo = new javax.swing.JPanel();
        SurnameTF = new javax.swing.JTextField();
        NameTF = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        NameL = new javax.swing.JLabel();
        SurnameL = new javax.swing.JLabel();
        DateL = new javax.swing.JLabel();
        EmailL = new javax.swing.JLabel();
        EmailTF = new javax.swing.JTextField();
        PasswordL = new javax.swing.JLabel();
        PasswordTF = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        CreateButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelSfondo.setOpaque(false);
        jPanelSfondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SurnameTF.setToolTipText("");
        SurnameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SurnameTFActionPerformed(evt);
            }
        });
        jPanelSfondo.add(SurnameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 260, -1));

        NameTF.setToolTipText("");
        NameTF.setName(""); // NOI18N
        NameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTFActionPerformed(evt);
            }
        });
        jPanelSfondo.add(NameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 260, -1));

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jPanelSfondo.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 129, -1));

        NameL.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        NameL.setText("Name");
        jPanelSfondo.add(NameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        SurnameL.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        SurnameL.setText("Surname");
        jPanelSfondo.add(SurnameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        DateL.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        DateL.setText("Date of Birth");
        jPanelSfondo.add(DateL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        EmailL.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        EmailL.setText("Email");
        jPanelSfondo.add(EmailL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        EmailTF.setToolTipText("");
        EmailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTFActionPerformed(evt);
            }
        });
        jPanelSfondo.add(EmailTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 286, -1));

        PasswordL.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        PasswordL.setText("Password");
        jPanelSfondo.add(PasswordL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        PasswordTF.setToolTipText("");
        PasswordTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTFActionPerformed(evt);
            }
        });
        jPanelSfondo.add(PasswordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 170, -1));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        CreateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userGUI/resources/ok-26.png"))); // NOI18N
        CreateButton.setText("Create");
        CreateButton.setName(""); // NOI18N
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CreateButton);

        CancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userGUI/resources/cancel-26 red.png"))); // NOI18N
        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CancelButton);

        jPanelSfondo.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 400, 50));

        getContentPane().add(jPanelSfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 380, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userGUI/resources/sfondo399.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 380, 340));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SurnameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SurnameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SurnameTFActionPerformed

    private void NameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTFActionPerformed

    private void EmailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTFActionPerformed

    private void PasswordTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTFActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed

        if (CreateButton.getText().equals("Create")){
            if (createUser()){
            JOptionPane.showMessageDialog(this, "Creating user successfully completed", "Completed", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            }
        }
        else{
            if(updateUser()){
            JOptionPane.showMessageDialog(this, "Updating user successfully completed", "Completed", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            }
        }
        
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed

        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * Controlla se l'indirizzo email inserito dall'utente matches con la regular expression
     * @param email email dell'utente
     * @return true se Ã¨ un indirizzo formalmente valido, false viceversa
     */
    public boolean controlEmail(String email){
    
        String emailPattern = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        return email.matches(emailPattern);
    }
    
    /**
     * cambia il tipo ed il formato della data selezionata tramite jdatechooser
     * @param dateString la data inserita nel jdatechooser
     * @return date in formato e tipo sql
     * @throws ParseException 
     */
    public java.sql.Date dateManager(String dateString) throws ParseException  {
    
        final String OLD_FORMAT = "dd-MM-yyyy";
        final String NEW_FORMAT = "yyyy-MM-dd";
        
        SimpleDateFormat sdf = new SimpleDateFormat(OLD_FORMAT);
        java.util.Date newDate = sdf.parse(dateString);
        sdf.applyPattern(NEW_FORMAT);
        
        java.sql.Date sqldDate = new java.sql.Date(newDate.getTime());   
        return sqldDate;
    }
    
    private boolean createUser(){
    
    if (!controlEmail(EmailTF.getText())){
        JOptionPane.showMessageDialog(this, "Invalid email: Please insert a valid input", "Error", ERROR_MESSAGE);
        return false;
    }
        else{      
        try {
            User user = new User();
            user.setName(NameTF.getText());
            user.setSurname(SurnameTF.getText());
            user.setEmail(EmailTF.getText());
            user.setPassword(PasswordTF.getText());
        
            String dateString = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
            System.out.println(dateString);
            try {
                user.setDate(dateManager(dateString));
            } catch (ParseException ex) {
                System.err.println("Error date format");
            }

            if (!validInput()){
                JOptionPane.showMessageDialog(this, "All fields are required, please", "Error invalid input", ERROR_MESSAGE);
                return false;
            }
            LinkedList<User> list = new LinkedList<>();
            list.add(user);

            Client client = new Client();
            client.send(list, "New", null);
            client.closeSocket();
            
            return true;
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Server out of services", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            return false;
        }
        }
    
    }
    
    public boolean updateUser(){
        try {    
            User user = new User();
            user.setName(NameTF.getText());
            user.setSurname(SurnameTF.getText());
            user.setEmail(EmailTF.getText());
            user.setPassword(PasswordTF.getText());
        
            String dateString = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
            System.out.println(dateString);
            try {
                user.setDate(dateManager(dateString));
            } catch (ParseException ex) {
                System.err.println("Error date format");
            }

            if (!validInput()){
                JOptionPane.showMessageDialog(this, "All fields are required, please", "Error invalid input", ERROR_MESSAGE);
                return false;
            }
            
            LinkedList<User> list = new LinkedList<>();
            list.add(user);

            Client client = new Client();
            client.send(list, "Update", null);
            client.closeSocket();
            
            firstScreen.updateUser(user);
            
            return true;
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Server out of services", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            return false;
        }
    
    }
    
    /**
     * controlla se i tutti campi, necessari alla creazione o update di user, sono stati inseriti
     */
    private boolean validInput(){
        return (!NameTF.getText().equals("")) && (!SurnameTF.getText().equals("")) && 
                (!PasswordTF.getText().equals("")) && (jDateChooser1.getDate() != null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel DateL;
    private javax.swing.JLabel EmailL;
    private javax.swing.JTextField EmailTF;
    private javax.swing.JLabel NameL;
    private javax.swing.JTextField NameTF;
    private javax.swing.JLabel PasswordL;
    private javax.swing.JTextField PasswordTF;
    private javax.swing.JLabel SurnameL;
    private javax.swing.JTextField SurnameTF;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelSfondo;
    // End of variables declaration//GEN-END:variables
}
